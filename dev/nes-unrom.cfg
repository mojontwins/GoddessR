MEMORY {
	# Zero page
	ZP: start = $00, size = $100, type = rw, define = yes;

	# INES Cartridge Header
	HEADER: start = $0, size = $10, file = %O ,fill = yes;

	# UNROM 64K
	PRG0: start = $8000, size = $4000, file = %O, fill = yes, define = yes;
	PRG1: start = $8000, size = $4000, file = %O, fill = yes, define = yes;
	PRG2: start = $8000, size = $4000, file = %O, fill = yes, define = yes;
	PRG3: start = $C000, size = $3ffa, file = %O, fill = yes, define = yes;

	VECTORS: start = $fffa, size = $6, file = %O, fill = yes;

	# standard 2K SRAM (-zeropage)
	# $0100 famitone, palette, cpu stack
	# $0200 oam buffer
	# $0300..$800 ca65 stack
	RAM: start = $0300, size = $0500, define = yes;
}

SEGMENTS {
	HEADER:		load = HEADER,	type = ro;
	ROM0:		load = PRG0,	type = ro,	define = yes;
	ROM1:		load = PRG1,	type = ro,	define = yes;
	ROM2:		load = PRG2,	type = ro,	define = yes;
	STARTUP:	load = PRG3,	type = ro,  define = yes;
	LOWCODE:	load = PRG3,	type = ro,					optional = yes;
	INIT:		load = PRG3,	type = ro,	define = yes,	optional = yes;
	DATA:		load = PRG3, run = RAM, type = rw,  define = yes;
	RODATA:		load = PRG3,	type = ro,	define = yes;
	CODE:		load = PRG3, 	type = ro, 	define = yes;
	VECTORS:	load = VECTORS,	type = rw;
	BSS:		load = RAM,		type = bss, define = yes;
	HEAP:		load = RAM,		type = bss, 				optional = yes;
	ZEROPAGE:	load = ZP,		type = zp;
}

FEATURES {
	CONDES: segment = INIT,
		type = constructor,
		label = __CONSTRUCTOR_TABLE__,
		count = __CONSTRUCTOR_COUNT__;
	CONDES: segment = RODATA,
		type = destructor,
		label = __DESTRUCTOR_TABLE__,
		count = __DESTRUCTOR_COUNT__;
	CONDES: type = interruptor,
		segment = RODATA,
		label = __INTERRUPTOR_TABLE__,
		count = __INTERRUPTOR_COUNT__;
}

SYMBOLS {
	__STACKSIZE__: type = weak, value = $0500;      # 5 pages stack
}
