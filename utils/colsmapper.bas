' colsmapper.bas
' Converts a map, exports columns of tiles

' fbc colsmapper.bas cmdlineparser.bas mtparser.bas

#include "cmdlineparser.bi"
#include "mtparser.bi"

Const SCR_W = 16
Const SCR_H = 12

Const STATE_REP = 1
Const STATE_STRING = 2

Sub usage
	Print "$ colsmapper.exe in=mapa.map out=cols.h/bin [size=w,h] [scrheight=h] prefix=p"
	Print "Where"
	Print "        in - input file"
	Print "        out - output file, .h = source, .bin = binary"
	Print "        size - # of colums, # of strips. Default = 256, 1"
	Print "        scrheight - # of rows in each strip. Default = 12"
	Print "        prefix - I export code"
End Sub

Dim As String mandatory (1) = { "in", "out" } 
Dim As Integer x, y, i, j, xx, yy, strip, column
Dim As Integer nStrips, nColumns, hScr
Dim As Integer coords (9)
Dim As Integer fIn, fOut
Dim As uByte d
Dim As Integer binaryOutput

' Default to...
nStrips = 1: nColumns = 256: hScr = 12 	

' Parse
sclpParseAttrs

If Not sclpCheck (mandatory ()) Then usage: End

If sclpGetValue ("size") <> "" Then
	parseCoordinatesString sclpGetValue ("size"), coords ()
	nColumns = coords (0)
	nStrips = coords (1)
End If

If sclpGetValue ("scrheight") <> "" Then
	hScr = Val (sclpGetValue ("scrheight"))
	If hScr = 0 Then usage: End
End If

If Right (sclpGetValue ("out"), 1) = "h" Then
	binaryOutput = 0
	If sclpGetValue ("prefix") = "" Then usage: End
Else
	binaryOutput = -1
End If

Print "colsmapper.exe " & nStrips & "x" & nColumns & "x" & hScr & " ";

' Leg's rock
fIn = FreeFile
Open sclpGetValue ("in") For Binary As #fIn
Kill sclpGetValue ("out")
fOut = FreeFile
If binaryOutput Then
	Open sclpGetValue ("out") For Binary As #fOut
Else
	Open sclpGetValue ("out") For Output As #fOut
	Print #fOut, "// " & sclpGetValue ("out")
	Print #fOut, "// Generated by colsmapper.exe"
	Print #fOut, "// Copyleft 2017 by The Mojon Twins"
	Print #fOut, ""

	Print #fOut, "const unsigned char colsmap_" & sclpGetValue ("prefix") & " [] = {"
End If

For strip = 0 To nStrips - 1
	For column = 0 To nColumns - 1
		If Not binaryOutput Then Print #fOut, "	";
		For y = 0 To hScr - 1
			Seek fIn, 1 + strip * nColumns * hScr + nColumns * y + column
			Get #fIn, , d
			If binaryOutput Then 
				Put #fOut, , d
			Else
				Print #fOut, "0x" & LCase (Hex (d, 2));
				If y < hScr - 1 Or column < nColumns - 1 Or strip < nStrips - 1 Then Print #fOut, ", ";
			End If			
		Next y
		If Not binaryOutput Then Print #fOut, ""
	Next column
Next strip

If Not binaryOutput Then 
	Print #fOut, "};"
	Print #fOut, ""
End If

Print "" & (nStrips * nColumns * hScr) & " bytes written - DONE"
